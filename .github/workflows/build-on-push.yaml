name: Build Soggy on push
on:
  push:
    paths:
      - soggy
      - .github/workflows/build-on-push.yaml
    branches-ignore:
      - dependabot/**

jobs:
  build:
    runs-on: windows-latest
    steps:
        - name: Set up MSYS2
          uses: msys2/setup-msys2@v2
          with:
            msys2-version: 'x86_64'
            
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            submodules: true
            persist-credentials: false
            
        - name: Get current date & time before build
          id: date-time-before
          shell: bash
          run: echo date-time=$(date +'%Y-%m-%d %H:%M') >> $GITHUB_OUTPUT

        - name: Install dependencies (vcpkg/pacman)
          shell: msys2 {0}
#         run: vcpkg install protobuf lua[cpp]:x64-windows
          run: |
           pacman -S ${MINGW_PACKAGE_PREFIX}-{toolchain,cmake,protobuf,lua} --noconfirm
           pacman -S make --noconfirm

        - name: Prepare for build (No optimization)
          shell: msys2 {0}
          run: |
            cd soggy
            cmake -B build -G "Unix Makefiles"
#           cmake -B build -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_CXX_FLAGS="/Od" -DCMAKE_MSVC_RUNTIME_LIBRARY="MultiThreaded"

        - name: Build time
          shell: msys2 {0}
          run: |
            cd soggy
            cmake --build build -j8

        - name: Bundling everything up
          run: |
            cd soggy/build/
            Remove-Item -LiteralPath "CMakeFiles","extern","proto" -Force -Recurse
            Remove-Item "Makefile","*.a","cmake_install.cmake","binpack_output.cpp","CMakeCache.txt"
            Copy-Item -Path 'd:/a/_temp/msys64/mingw64/bin/libgcc_s_seh-1.dll','d:/a/_temp/msys64/mingw64/bin/libprotobuf.dll','d:/a/_temp/msys64/mingw64/bin/libstdc++-6.dll','d:/a/_temp/msys64/mingw64/bin/libwinpthread-1.dll','d:/a/_temp/msys64/mingw64/bin/lua54.dll','d:/a/_temp/msys64/mingw64/bin/zlib1.dll' -Destination ./
            7z a soggy_exec_rel.7z * -mx9

        - name: Get current date & time after build
          id: date-time-after
          shell: bash
          run: |
            echo date-time=$(date +'%Y-%m-%d %H:%M') >> $GITHUB_OUTPUT
            echo date-time-tag=$(date +'%Y-%m-%d-%H-%M') >> $GITHUB_OUTPUT

        - name: Upload Soggy Release
          uses: actions/upload-artifact@v3
          with:
            name: soggy-exec-rel
            path: soggy/build/soggy_exec_rel.7z

    outputs:
        date-time-before: ${{ steps.date-time-before.outputs.date-time }}
        date-time-after: ${{ steps.date-time-after.outputs.date-time }}
        date-time-after-tag: ${{ steps.date-time-after.outputs.date-time-tag }}
        
  archive-rel:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Soggy build
        uses: actions/download-artifact@v3
        with:
          name: soggy-exec-rel
          
      - name: Download all dependencies
        run: |
          7z x soggy_exec_rel.7z
          rm soggy_exec_rel.7z
          wget https://github.com/LDAsuku/soggy/raw/mistress/soggy.cfg
          echo "mitmdump.exe -p 8080 -s \"proxy.py\"" >> proxy.bat
          wget https://snapshots.mitmproxy.org/9.0.1/mitmproxy-9.0.1-windows.zip
          unzip mitmproxy-9.0.1-windows.zip mitmdump.exe 
          rm mitmproxy-9.0.1-windows.zip
          wget https://github.com/phanhoang1366/soggy-autobuilds/raw/main/proxy.py
          wget https://github.com/phanhoang1366/soggy-autobuilds/raw/main/proxy_config.py
          git clone https://codeberg.org/LDA_suku/soggy_resources.git resources
          
      - name: Compress with 7-Zip Soggy Full version (release)
        run: 7z a soggy_full_rel.7z * -mx9
      
      - name: Upload Soggy full version
        uses: actions/upload-artifact@v3
        with:
          name: soggy-7z-full-rel
          path: soggy_full_rel.7z
        
          
  release:
    needs: [build, archive-rel]
    runs-on: ubuntu-latest
    steps:
      - name: Download Soggy archive (Release)
        uses: actions/download-artifact@v3
        with:
          name: soggy-7z-full-rel
      
      - name: Download Soggy executable only (Release)
        uses: actions/download-artifact@v3
        with:
          name: soggy-exec-rel
                 
      - name: Release
        run: |
          gh release create "m-${{ needs.build.outputs.date-time-after-tag }}" \
          "soggy_full_rel.7z" \
          "soggy_exec_rel.7z" \
          -n "Soggy built on ${{ needs.build.outputs.date-time-after }} started at ${{ needs.build.outputs.date-time-before }}" \
          -t "${{ needs.build.outputs.date-time-after }}"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          
  delete_old:
    name: Delete older pre-releases
    runs-on: ubuntu-latest
    steps:
      - name: Delete older pre-releases
        uses: dev-drprasad/delete-older-releases@v0.3.1
        with:
          keep_latest: 1
          delete_tags: true
          delete_tag_pattern: a
        env:
          GITHUB_TOKEN: ${{ github.token }}
